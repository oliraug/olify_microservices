spring.main.allow-bean-definition-overriding=true

#Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://localhost:3306/olify_customers?useSSL=false
spring.datasource.username = root
spring.datasource.password = olify
spring.datasource.initialize=true
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
#Hibernate properties
#The SQL dialect makes hibernate generate better sql for the chosen database
spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#Hibernate5 default naming strategy
#spring.jpa.hibernate.naming.implicit_strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true
spring.jpa.database = MySQL

#Configuring Eureka Servers

server.port=8181  # Indicates the default PORT where this service will be started
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=false   # telling the server not to register himself in the service
eureka.client.fetch-registry=false
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

#Configuring Eureka Clients

spring.application.name=olifycustomer-service
#server.port=8761
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false  
eureka.instance.preferIpAddress=true
eureka.instance.leaseRenewalIntervalInSeconds=1
eureka.instance.leaseExpirationDurationInSeconds=3
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.instance.hostname=localhost

  # custom attribute for the actuator info endpoint
info.app.name=olify-customer-service
    
# give the application a name
spring.application.name=olifycustomer-service

# disable actuator security for endpoints 
management.security.enabled=false

# custom logging settings
logging.level=info
logging.level.com.olify=debug
logging.level.org.springframework=info


#Here we are telling Zuul to register itself as a service in Eureka and to run on port 8762.																		

server.port=8762
spring.application.name=zuul-server
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}

#Configuring spring mobile
server.port=8081
spring.mobile.devicedelegatingviewresolver.enabled=true
spring.mobile.enable-fallback=true
# mobile-suffix: .mob
spring.mobile.mobile-prefix=/mobile/
# normal-suffix: .nor
spring.mobile.normal-prefix=/
 # tablet-suffix: .tab
spring.mobile.tablet-prefix=/tablet/

management.endpoints.web.exposure.include=*
logging.level.org.springframework.boot.actuate.trace.WebRequestTraceFilter: TRACE
server.port=8080
spring.application.name=olifycustomer
spring.kafka.consumer.group-id=olifycustomer
spring.kafka.consumer.value-deserializer=com.olify.eprice.microservice.customer.events.OlifyCustomerDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=MANUAL
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#show sql statement
logging.level.org.hibernate.SQL=debug

#show sql values
logging.level.org.hibernate.type.descriptor.sql=trace
     